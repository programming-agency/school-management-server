const express = require('express');
const Teacher = require('../models/TeacherSchema')
// Import your Student model or database schema here

const teacherRoutes = (app) => {
    app.post('/api/teachers', async (req, res) => {
        try {
            // Validate and process the request data
            const {
                name,
                email,
                phone,
                gender,
                age,
                education,
                address,
                position,
                idNumber,
                image,
                dateOfBirth,
                bloodGroup,
                joinDate,
                subject,
            } = req.body;

            const teacherData = {
                name,
                email,
                phone,
                gender,
                age,
                education,
                address,
                position,
                idNumber,
                image,
                dateOfBirth,
                bloodGroup,
                joinDate,
                subject,
            };

            // Create a new student record in the database
            const newTeacher = new Teacher(teacherData);
            await newTeacher.save();
            res.status(201).json({ message: 'Teacher created successfully', teacher: newTeacher });
        } catch (error) {
            // console.error(error);
            res.status(500).json({ error: 'An error occurred while creating the Teacher' });
        }
    });

    app.get('/api/teachers', async (req, res) => {
        try {
            const teachers = await Teacher.find()
            res.status(200).json(teachers)
            // console.log(teachers);
        } catch (error) {
            res.status(501).json({ message: 'Teacher not Found!' })
        }
    })
    //  fiend  teacher by id

    app.get('/api/teachers/:id', async (req, res) => {
        try {
            const id = req.params.id;
            // Find the teacher with the specified ID
            const findTeacher = await Teacher.findById(id);

            if (findTeacher) {
                res.status(200).json({ message: "Found teacher successfully", teacher: findTeacher });
            } else {
                res.status(404).json({ message: 'Teacher not found' });
            }
        } catch (error) {
            res.status(500).json({ message: 'Internal Server Error' });
        }
    });

    // Delete
    app.delete('/api/teachers/:id', async (req, res) => {
        const id = req.params.id;
        console.log(id);
        try {
            const deleteTeacher = await Teacher.findByIdAndDelete(id);
            if (deleteTeacher) {
                res.status(200).json({ message: "delete Teacher successfully" });
            } else {
                res.status(404).json({ message: "Teacher Not found" });
            }
        } catch (error) {
            res.status(500).json({ message: 'An error occurred while deleting the Teacher', error: error.message });
        }
    });
    app.put('/api/teachers/:id', async (req, res) => {
        const id = req.params.id;
        console.log(id);
        const updateTeacherData = req.body;

        try {
            const updatedTeacher = await Teacher.findOneAndUpdate({ _id: id }, updateTeacherData, { new: true });

            if (updatedTeacher) {
                return res.status(200).json({ message: 'Teacher updated successfully', teacher: updatedTeacher });
            } else {
                return res.status(404).json({ error: 'Teacher not found' });
            }
        } catch (error) {
            console.error(error);
            return res.status(500).json({ error: 'An error occurred while updating the teacher' });
        }
    });
};

module.exports = teacherRoutes;
